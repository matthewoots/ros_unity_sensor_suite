//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Geographic
{
    [Serializable]
    public class RouteSegmentMsg : Message
    {
        public const string k_RosMessageName = "geographic_msgs/RouteSegment";
        public override string RosMessageName => k_RosMessageName;

        //  Route network segment.
        // 
        //  This is one directed edge of a RouteNetwork graph. It represents a
        //  known path from one way point to another.  If the path is two-way,
        //  there will be another RouteSegment with "start" and "end" reversed.
        public Uuid.UniqueIDMsg id;
        //  Unique identifier for this segment
        public Uuid.UniqueIDMsg start;
        //  beginning way point of segment
        public Uuid.UniqueIDMsg end;
        //  ending way point of segment
        public KeyValueMsg[] props;
        //  segment properties

        public RouteSegmentMsg()
        {
            this.id = new Uuid.UniqueIDMsg();
            this.start = new Uuid.UniqueIDMsg();
            this.end = new Uuid.UniqueIDMsg();
            this.props = new KeyValueMsg[0];
        }

        public RouteSegmentMsg(Uuid.UniqueIDMsg id, Uuid.UniqueIDMsg start, Uuid.UniqueIDMsg end, KeyValueMsg[] props)
        {
            this.id = id;
            this.start = start;
            this.end = end;
            this.props = props;
        }

        public static RouteSegmentMsg Deserialize(MessageDeserializer deserializer) => new RouteSegmentMsg(deserializer);

        private RouteSegmentMsg(MessageDeserializer deserializer)
        {
            this.id = Uuid.UniqueIDMsg.Deserialize(deserializer);
            this.start = Uuid.UniqueIDMsg.Deserialize(deserializer);
            this.end = Uuid.UniqueIDMsg.Deserialize(deserializer);
            deserializer.Read(out this.props, KeyValueMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.start);
            serializer.Write(this.end);
            serializer.WriteLength(this.props);
            serializer.Write(this.props);
        }

        public override string ToString()
        {
            return "RouteSegmentMsg: " +
            "\nid: " + id.ToString() +
            "\nstart: " + start.ToString() +
            "\nend: " + end.ToString() +
            "\nprops: " + System.String.Join(", ", props.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
